{"version":3,"sources":["constants/routes.js","components/Navigation/index.js","firebase.js","components/NewUserForm/index.js","components/Admin/UserItem.js","components/Admin/index.js","components/DashBoard/index.js","components/Login/index.js","components/404/index.js","components/Home/index.js","components/App/PrivateRoute.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["LOGIN","DASHBOARD","ADMIN","Navigation","user","className","to","ROUTES","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","generateUserDocument","uid","callback","a","collection","doc","get","then","exists","data","console","log","catch","error","addUser","email","password","userObj","createUserWithEmailAndPassword","set","errorMessage","message","alert","Login","toggleForm","useState","setEmail","setPassword","name","lastName","type","newUser","setNewUser","handleChange","e","target","id","value","htmlFor","onChange","autoComplete","Object","assign","onClick","preventDefault","handleSubmit","UserItem","item","updating","setUpdating","initialValues","onSubmit","values","errors","touched","handleBlur","onBlur","label","Admin","users","setUsers","userForm","setUserForm","useEffect","onSnapshot","docs","map","length","index","NewUserForm","DashBoard","currentUser","userDoc","setUserDoc","path","component","setCurrentUser","history","signInWithEmailAndPassword","push","authUser","validate","test","style","minHeight","NotFound","Home","PrivateRoute","Component","authed","rest","render","props","pathname","state","from","location","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cc28ea1.chunk.js","sourcesContent":["export const HOME = '/';\nexport const LOGIN = '/login';\nexport const DASHBOARD = '/dashboard';\nexport const ADMIN = '/dashboard/admin';","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = ({ user }) => (\n  <nav className='navbar navbar-expand-lg navvar-dark bg-dark text-light d-flex justify-content-between'>\n    <h1 className='navbar-brand'>RCP</h1>\n    <ul className='navbar-nav'>\n      <li className='nav-item nav-link'>\n        <Link to={ROUTES.ADMIN}>Admin</Link>\n      </li>\n      <li className='nav-item nav-link'>\n        <Link to={ROUTES.DASHBOARD}>Dashboard</Link>\n      </li>\n      <li className='nav-item nav-link'>\n        <Link to={ROUTES.LOGIN}>Log out</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: \"inz-proto.firebaseapp.com\",\n  projectId: \"inz-proto\",\n  storageBucket: \"inz-proto.appspot.com\",\n  messagingSenderId: \"241503422888\",\n  appId: \"1:241503422888:web:64093243936c23dca8359d\",\n  measurementId: \"G-M37DH32FT8\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const generateUserDocument = async (uid, callback) => {\n  const docRef = firestore.collection('users').doc(uid)\n  docRef.get().then(function (doc) {\n    if (doc.exists) {\n      callback(doc.data())\n    } else {\n      console.log(\"No such document!\");\n    }\n  }).catch(function (error) {\n    console.log(\"Error getting document:\", error);\n  });\n}\nexport const addUser = async (email, password, userObj) => {\n  firebase.auth().createUserWithEmailAndPassword(email, password)\n    .then((user) => {\n      firestore.collection('users').doc(user.user.uid).set(userObj)\n    })\n    .catch((error) => {\n      var errorMessage = error.message;\n      alert(errorMessage)\n      console.log(errorMessage);\n    });\n}\nexport const getAllUsers = async (callback) => {\n  const docRef = await firestore.collection('users').get()\n  callback(docRef.docs.map(doc => doc.data()))\n}\nexport const watchForChanges = (callback) => {\n  firestore.collection('users')\n    .onSnapshot((collection) => {\n      callback(collection.docs.map(doc => Object.assign({}, doc.data(), { id: doc.id })))\n    });\n}\nexport const deleteUser = async (uid) => {\n  firebase.collection('users').doc(uid).delete()\n    .then(() => { alert('deleted') })\n    .catch((error) => alert(error))\n}\nexport const authUser = (email, password, callback, history) => {\n  firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(user => callback(user))\n    .then(() => history.push('/dashboard'))\n    .catch((error) => {\n      const errorMessage = error.message;\n      alert(errorMessage)\n    });\n}\nexport const addDoc = (uid, name, lastName, type) => {\n  firestore.collection(\"users\").doc(uid).set({\n    name,\n    lastName,\n    type\n  })\n    .then(function () {\n      console.log(\"Document successfully written!\");\n    })\n    .catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n}","import React, { useState } from 'react';\nimport { addUser } from '../../firebase'\n\nconst Login = ({ toggleForm }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [newUser, setNewUser] = useState({\n    name: '',\n    lastName: '',\n    type: 'user',\n  })\n  const editNewUserName = (e) => {\n    setNewUser(Object.assign({}, newUser, { name: e.target.value }))\n  }\n  const editNewUserLastName = (e) => {\n    setNewUser(Object.assign({}, newUser, { lastName: e.target.value }))\n  }\n  const editNewUserType = (e) => {\n    setNewUser(Object.assign({}, newUser, { type: e.target.value }))\n  }\n  const handleChange = (e) => {\n    e.target.id === 'email' ? setEmail(e.target.value) : setPassword(e.target.value)\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addUser(email, password, newUser)\n    toggleForm(false)\n  }\n  return (\n    <form className=''>\n      <div className='form-row'>\n        <div className='form-group col-md-3'>\n          <label htmlFor='email' className='form-label' >Login</label>\n          <input type='email' className='form-control' value={email} onChange={handleChange} id='email' />\n        </div>\n        <div className='form-group col-md-3'>\n          <label htmlFor='password' className='form-label' >Password</label>\n          <input autoComplete='off' type='password' className='form-control' value={password} onChange={handleChange} id='password' />\n        </div>\n      </div>\n      <div className='form-row'>\n        <div className='form-group col-md-2'>\n          <label htmlFor='name' className='form-label' >Name</label>\n          <input type='text' className='form-control' id='name' value={newUser.name} onChange={editNewUserName} />\n        </div>\n        <div className='form-group col-md-2'>\n          <label htmlFor='lastName' className='form-label' >Last Name</label>\n          <input type='text' className='form-control' id='lastName' value={newUser.lastName} onChange={editNewUserLastName} />\n        </div>\n        <div className='form-group col-md-2'>\n          <label htmlFor='type' className='form-label' >Type</label>\n          <select type='text' className='form-control' id='type' value={newUser.type} onChange={editNewUserType}>\n            <option value='user' >user</option>\n            <option value='admin' >admin</option>\n          </select>\n        </div>\n      </div>\n      <button className='btn btn-success' onClick={(e) => handleSubmit(e)}>Add</button>\n    </form>)\n};\n\nexport default Login;","import React, { useState } from 'react'\nimport { Formik, Field, Form } from 'formik'\nimport { addDoc } from '../../firebase'\n\nconst UserItem = ({ item }) => {\n  const [updating, setUpdating] = useState(false)\n  return (\n    <li className='list-group-item'>\n      <Formik\n        initialValues={{ name: item.name, lastName: item.lastName, type: item.type }}\n        onSubmit={(values) => {\n          addDoc(item.id, values.name, values.lastName, values.type)\n        }}\n      >\n        {({ errors, touched, handleBlur, handleChange, values }) => (<Form>\n          <span className='row'>\n            <span className='col-3 col-md-3'>\n              {updating ? <Field name='name' type='text' className='form-control' /> : <p>{item.name}</p>}\n            </span>\n            <span className='col-4 col-md-3'>\n              {updating ? <Field name='lastName' type='text' className='form-control' /> : <p>{item.lastName}</p>}\n            </span>\n            <span className='col-3 col-md-3'>\n              {updating\n                ? <select\n                  name='type'\n                  className='form-control'\n                  value={values.type}\n                  onChange={handleChange}\n                  onBlur={handleBlur}>\n                  <option value='user' label='user' />\n                  <option value='admin' label='admin' />\n                </select>\n                : <p>{item.type}</p>}\n            </span>\n            {updating\n              ? <button className='btn btn-success mr-3' onClick={() => setUpdating(!updating)}>save</button>\n              : <button className='btn btn-primary mr-3' onClick={() => setUpdating(!updating)}>update</button>}\n            {updating\n              ? <button className='btn btn-danger' type='submit' onClick={() => setUpdating(!updating)}>cancel</button>\n              : <button className='btn btn-danger'>delete</button>}\n          </span>\n        </Form>)}\n      </Formik>\n    </li>\n  )\n}\n\nexport default UserItem","import React, { useEffect, useState } from 'react';\nimport NewUserForm from '../NewUserForm'\nimport { watchForChanges } from '../../firebase'\nimport UserItem from './UserItem';\n\nconst Admin = () => {\n  const [users, setUsers] = useState([])\n  const [userForm, setUserForm] = useState(false)\n  useEffect(() => {\n    watchForChanges(setUsers)\n  }, [])\n\n  return (\n    <div>\n      <div className='container'>\n        <h1>Admin</h1>\n        <div>\n          <ul className='list-group'>\n            <li className='list-group-item active'>\n              <span className='row'>\n                <span className='col-3 col-md-3'>First name</span>\n                <span className='col-4 col-md-3'>Last name</span>\n                <span className='col-3 col-md-3'>Type</span>\n              </span>\n            </li>\n            {users.length > 0\n              ? users.map((item, index) => <UserItem item={item} key={index} />)\n              : null\n            }\n          </ul>\n          <button\n            className={`btn ${userForm ? 'btn-danger' : 'btn-success'} mt-3`}\n            onClick={() => setUserForm(!userForm)}>\n            {userForm ? 'Cancel' : 'Add user'}\n          </button>\n          {userForm ? <NewUserForm toggleForm={setUserForm} /> : null}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Admin;","import React, { useEffect, useState } from 'react';\nimport Navigation from '../Navigation'\nimport { generateUserDocument } from '../../firebase'\nimport { Route } from 'react-router-dom'\nimport * as ROUTES from '../../constants/routes'\nimport Admin from '../Admin';\n\n\nconst DashBoard = ({ currentUser }) => {\n  const [userDoc, setUserDoc] = useState(null)\n  useEffect(() => {\n    generateUserDocument(currentUser?.user.uid, setUserDoc);\n  }, [currentUser])\n  return (\n    <div>\n      <Navigation />\n      {userDoc === null\n        ? <h1>loading...</h1>\n        : <div className='container'>\n          <Route path={ROUTES.ADMIN} component={Admin} />\n        </div>}\n    </div>\n  )\n};\n\nexport default DashBoard;\n","import React from 'react';\nimport { authUser } from '../../firebase'\nimport { Formik, Field, Form } from 'formik'\n\nconst Login = ({ setCurrentUser, history }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={(values) => {\n          authUser(values.email, values.password, setCurrentUser, history)\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n          if (!values.password) {\n            errors.password = 'Required';\n          } else if (values.password.length < 6) {\n            errors.password = 'Password must be 6 characters long';\n          }\n\n          return errors\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className='col-md-6 offset-md-3 min-vh-100 d-flex flex-column justify-content-center'>\n            <div className='mb-3'>\n              <label htmlFor='email' className='form-label' >Email</label>\n              <Field name='email' type='email' className='form-control' />\n              <div className='text-danger' style={{ minHeight: 34 }}>\n                {errors.email && touched.email ? errors.email : ''}\n              </div>\n            </div>\n            <div className='mb-3'>\n              <label htmlFor='password' className='form-label' >Password</label>\n              <Field name='password' type='password' className='form-control' />\n              <div className='text-danger' style={{ minHeight: 34 }}>\n                {errors.password && touched.password ? errors.password : ''}\n              </div>\n            </div>\n            <button className='btn btn-primary col-md-3' type='submit'>Log in</button>\n          </Form>\n        )}\n      </Formik>\n    </div >)\n};\n\nexport default Login;","import React from 'react';\n\nconst NotFound = () => {\n\n  return (\n    <div className='min-vh-100 d-flex flex-column justify-content-center align-items-center'>\n      <h3>404 page not found</h3>\n      <p>We are sorry but the page you are looking for does not exist.</p>\n    </div>)\n};\n\nexport default NotFound;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n\n  return (\n    <div className='min-vh-100 d-flex flex-column justify-content-center align-items-center'>\n      <h1>Best RCP App</h1>\n      <Link to='/login'><button className='btn btn-lg btn-primary'>LOGIN</button></Link>\n    </div>)\n};\n\nexport default Home;","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => {\n  return (\n    <Route {...rest}\n      render={(props) => authed === true\n        ? <Component {...props} {...rest} />\n        : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n\nexport default PrivateRoute","import React, { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nimport DashBoard from '../DashBoard'\nimport Login from '../Login'\nimport NotFound from '../404'\nimport Home from '../Home'\nimport PrivateRoute from './PrivateRoute'\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(null)\n  return (\n    <div className='min-vh-100 d-flex flex-column'>\n      <HashRouter basename='/'>\n        <Switch>\n          <Route exact path={ROUTES.HOME} render={(props) => <Home {...props} />} />\n          <Route path={ROUTES.LOGIN} render={(props) => <Login {...props} setCurrentUser={setCurrentUser} />} />\n          <PrivateRoute\n            authed={currentUser !== null ? true : false}\n            currentUser={currentUser}\n            path={ROUTES.DASHBOARD}\n            component={DashBoard}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </div>)\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}